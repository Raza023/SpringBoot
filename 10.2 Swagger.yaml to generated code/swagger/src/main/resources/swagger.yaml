openapi: 3.0.1
info:
  title: Book Service
  description: Sample Documentation Generated Using OpenAPI for the Book Rest API
  termsOfService: https://github.com/Raza023
  license:
    name: Java Learning License
    url: https://github.com/Raza023/SpringBoot
  version: "1.0"
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: Book Controller APIs
    description: Operations related to books
paths:
  /book/save:
    post:
      tags:
        - Book Controller APIs
      summary: Create a new book
      description: This endpoint allows for creating a new book in the system
      operationId: saveBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /book:
    get:
      tags:
        - Book Controller APIs
      summary: Get a book by title.
      description: This endpoint retrieves a specific book by its title
      operationId: getBooksByTitle
      parameters:
        - name: title
          in: query
          description: The title of the book to search for
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully retrieved book using title.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        "404":
          description: Book not found using title.
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
  /book/get:
    get:
      tags:
        - Book Controller APIs
      summary: Get all books
      description: This endpoint retrieves all books from the system
      operationId: fetchAllBooks
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
  /book/get/{bookId}:
    get:
      tags:
        - Book Controller APIs
      summary: Get a book by ID
      description: This endpoint retrieves a specific book by its ID
      operationId: fetchBookById
      parameters:
        - name: bookId
          in: path
          description: ID of the book to be retrieved
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Successfully retrieved book using id.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Book not found using id.
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Book"
  /book/delete/{bookId}:
    delete:
      tags:
        - Book Controller APIs
      summary: Delete book by ID
      description: This endpoint delete the book from the system
      operationId: deleteBook
      parameters:
        - name: bookId
          in: path
          description: ID of the book to be deleted.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Book:
      required:
        - bookId
        - bookName
        - price
      type: object
      properties:
        bookId:
          type: integer
          description: Unique identifier for the book
          format: int32
          example: 1
        bookName:
          type: string
          description: Name of the book
          example: Spring Boot in Action
        price:
          type: number
          description: Price of the book
          format: double
          example: 29.99
      description: Book object to be created
