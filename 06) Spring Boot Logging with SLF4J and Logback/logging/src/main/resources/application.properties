spring.application.name=logging

#logging.level.s7.Application=WARN
  #shows warn, error, fatal
#logging.level.org.springframework.web=ERROR
  #shows error, fatal
#logging.level.com.example.logging=DEBUG
  #give your root package in place of com.example.logging

# Logging pattern for the console
#logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

#logging pattern for file
#logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

#logging.file.name=api.log
#same as above (./ specifies the current directory.)
#logging.file.name=./api.log


#Log Levels in Spring Boot (in order of verbosity) (Lafzi tarteeb ma):
#TRACE: Most detailed level, usually used for fine-grained debugging.
#DEBUG: Useful for development, showing internal details and states.
#INFO: General information about application events, usually non-critical.
#WARN: Potential problems that aren't necessarily errors but could lead to issues.
#ERROR: Serious issues that impact functionality or cause failures.
#FATAL: Critical issues that might cause the application to terminate (not a common level).